{
	"info": {
		"_postman_id": "d4cff16e-8841-4f85-906d-a4c011f9b768",
		"name": "02_HW_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json()\r",
							"var req_data = request.data\r",
							"pm.test(\"name\"), function () {\r",
							"    pm.expect(resp_data.name).to.eql(\"zaur\");\r",
							"};\r",
							"pm.test(\"age\"), function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(+resp_data.age).to.eql(32);\r",
							"};\r",
							"pm.test(\"salary\"), function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp_data.salary).to.eql(1000);\r",
							"};\r",
							"pm.test(\"Name_req\"), function () {\r",
							"    pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"};\r",
							"pm.test(\"Age_req\"), function () {\r",
							"    pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"};\r",
							"pm.test(\"salary_req\"), function () {\r",
							"    pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"};\r",
							"console.log(resp_data.family);\r",
							"pm.test(\"u_salary_1_5_year\"), function () {\r",
							"    pm.expect(resp_data.u_salary_1_5_year).to.eql(req_data.u_salary_1_5_year);\r",
							"};\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "zaur",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json()\r",
							"var req_data = request.data\r",
							"pm.test(\"Name_resp\"), function () {\r",
							"    pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"};\r",
							"pm.test(\"age_resp\"), function () {\r",
							"    pm.expect(resp_data.age).to.eql(req_data.age);\r",
							" };\r",
							"    pm.test(\"salary_resp\"), function () {\r",
							"    pm.expect(resp_data.salary).to.eql(req_data.salary);\r",
							" };\r",
							" console.log(resp_data.family);\r",
							"  pm.test(\"Dog_name\"), function () {\r",
							"    pm.expect(resp_data.family.pets.dog.name).exist;\r",
							" };\r",
							" pm.test(\"Dog_age\"), function () {\r",
							"    pm.expect(resp_data.family.pets.dog.age).exist;\r",
							" };\r",
							"pm.test(\"Dog_laky\"), function () {\r",
							"    pm.expect(resp_data.family.pets.dog.name).to.eql(resp_data.Laky);\r",
							" };\r",
							" pm.test(\"Dog_age_4\"), function () {\r",
							"    pm.expect(resp_data.family.pets.dog.age).to.eql(resp_data,4);\r",
							" };"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=zaur&age=32&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "zaur"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json()\r",
							"var req_data = request.data\r",
							"var query = {};\r",
							"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
							"pm.test(\"Name_resp\"), function () {\r",
							"    pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"};\r",
							"pm.test(\"age_resp\"), function () {\r",
							"    pm.expect(resp_data.age).to.eql(req_data.age);\r",
							" };\r",
							"console.log(query.salary);\r",
							"\r",
							" console.log(resp_data.salary);\r",
							" console.log(resp_data.salary[0]);\r",
							" console.log(resp_data.salary[1]);\r",
							"console.log(resp_data.salary[2]);\r",
							"pm.test(\"salary_req\"), function () {\r",
							"    pm.expect(resp_data.salary[0]).to.eql(1000);\r",
							"};\r",
							" pm.test(\"salary_1_req\"), function () {\r",
							"    pm.expect(resp_data.salary[1]).to.eql(2000);\r",
							"};\r",
							" pm.test(\"salary_2_req\"), function () {\r",
							"    pm.expect(resp_data.salary[2]).to.eql(3000);\r",
							"};\r",
							"console.log(resp_data.salary[0])\r",
							"//var name = zaur\r",
							"pm.environment.set(\"name\", resp_data.name);\r",
							"pm.environment.set(\"age\", resp_data.age);\r",
							"pm.environment.set(\"salary\", resp_data.salary[0]);\r",
							"for (let key in resp_data.salary) {\r",
							"  console.log(resp_data.salary[key]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=zaur&age=32&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "zaur"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\"), function () {\r",
							"    pm.response.to.have.status(200);\r",
							"};\r",
							"var resp_data = pm.response.json()\r",
							"var req_data = request.data\r",
							"pm.test(\"json_start_qa_salary\", function (){\r",
							"    pm.expect(resp_data).to.have.property(\"start_qa_salary\")\r",
							"})\r",
							"pm.test(\"json_qa_salary_after_6_months\", function (){\r",
							"    pm.expect(resp_data).to.have.property(\"qa_salary_after_6_months\")\r",
							"})\r",
							"pm.test(\"json_qa_salary_after_12_months\", function (){\r",
							"    pm.expect(resp_data).to.have.property(\"qa_salary_after_12_months\")\r",
							"})\r",
							"pm.test(\"json_qa_salary_after_1.5_year\", function (){\r",
							"    pm.expect(resp_data).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"})\r",
							"pm.test(\"json_qa_salary_after_3.5_years\", function (){\r",
							"    pm.expect(resp_data).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"})\r",
							"pm.test(\"json_person\", function (){\r",
							"    pm.expect(resp_data).to.have.property(\"person\")\r",
							"})\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp_data.start_qa_salary).to.eql(1000);\r",
							"});\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_data.qa_salary_after_6_months).to.eql(2000);\r",
							"});\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_data.qa_salary_after_12_months).to.eql(2700);\r",
							"});\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_data['qa_salary_after_1.5_year']).to.eql(3300);\r",
							"    });\r",
							"    pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_data['qa_salary_after_3.5_years']).to.eql(3800);\r",
							"    });\r",
							"     pm.test(\"resp_data.person.u_name[1]\", function () {\r",
							"    pm.expect(resp_data.person.u_name[1]).to.eql(+req_data.salary);\r",
							"    });\r",
							"    pm.test(\"resp_data.person.u_age\", function () {\r",
							"    pm.expect(resp_data.person.u_age).to.eql(+req_data.age);\r",
							"    });\r",
							"    pm.test(\"resp_data.person.u_age\", function () {\r",
							"    pm.expect(resp_data.person.u_salary_5_years).to.eql(req_data.salary*4.2);\r",
							"    });\r",
							"    for (let key in resp_data.person) {\r",
							"  console.log(resp_data.person[key]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}